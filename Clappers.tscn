[gd_scene load_steps=15 format=3 uid="uid://d0e1vo1l1oy0k"]

[ext_resource type="PackedScene" uid="uid://drjloko0s3swt" path="res://assets/seats/seats.glb" id="1"]
[ext_resource type="Texture2D" uid="uid://onjxgt18cps1" path="res://assets/characterMedium/normals.png" id="4_o3j8l"]
[ext_resource type="Texture2D" uid="uid://dmb0piravypp8" path="res://assets/characterMedium/offsets.exr" id="5_lu4mp"]
[ext_resource type="Texture2D" uid="uid://2xqnu5lq35o2" path="res://assets/characterMedium/palette.png" id="6_ybu68"]
[ext_resource type="ArrayMesh" path="res://assets/characterMedium/export_mesh.mesh" id="7"]
[ext_resource type="Script" path="res://Clappers.gd" id="8"]
[ext_resource type="Environment" uid="uid://ckf27ks3fm7il" path="res://clappers_env.tres" id="9"]

[sub_resource type="PrismMesh" id="1"]
left_to_right = 1.0
size = Vector3(22, 22, 1)

[sub_resource type="BoxMesh" id="2"]
size = Vector3(42, 22, 1)

[sub_resource type="Shader" id="Shader_dgrcn"]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform sampler2D offset_map;
uniform sampler2D normal_map;
uniform sampler2D texture_albedo: source_color;
uniform sampler2D texture_tintmask: source_color;
uniform sampler2D texture_palette: source_color;

uniform float start_frame = 0;
uniform float end_frame = 6.0;
uniform float time_scale = 4.0;

uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);

varying flat vec4 custom_data;

void vertex(){
	
	custom_data = INSTANCE_CUSTOM;
	
	float time_int = 1.0;
	float time = modf(TIME * time_scale, time_int);
	float num_frames = end_frame - start_frame;
	float frame_offset = num_frames * INSTANCE_CUSTOM.a;
	float current_frame = start_frame + mod((time * num_frames) + frame_offset, num_frames);
	
	ivec2 tex_size = textureSize(offset_map, 0);
	float pixel_size = 1.0 / float(tex_size.y);
	float frame_floor = clamp(floor(current_frame), start_frame, end_frame);
	float frame_ceil = clamp(ceil(current_frame), start_frame, end_frame);
	
	vec2 frame_floor_uv_offset = vec2(0.0, -((frame_floor + 0.5) * pixel_size));
	vec2 frame_ceil_uv_offset = vec2(0.0, -((frame_ceil + 0.5) * pixel_size));
	
	float lerp_factor = current_frame - frame_floor;
	
	vec3 offset_floor = texture(offset_map, UV2 + frame_floor_uv_offset).xyz;
	vec3 offset_ceil = texture(offset_map, UV2 + frame_ceil_uv_offset).xyz;
	vec3 offset_lerp = mix(offset_floor, offset_ceil, lerp_factor);
	vec3 new_offset = vec3(offset_lerp.x, offset_lerp.z, offset_lerp.y);
	
	VERTEX += new_offset;
	
	vec3 normal_floor = texture(normal_map, UV2 + frame_floor_uv_offset).xyz;
	vec3 normal_ceil = texture(normal_map, UV2 + frame_ceil_uv_offset).xyz;
	vec3 normal_lerp = mix(normal_floor, normal_ceil, lerp_factor);
	vec3 new_normal = vec3((normal_lerp.x * 2.0) - 1.0, (normal_lerp.z * 2.0) - 1.0, (normal_lerp.y * 2.0) - 1.0);
	
	NORMAL = new_normal;
}

void fragment(){
	vec3 albedo_col = texture(texture_albedo, UV).rgb;
	vec4 tint_mask = texture(texture_tintmask, UV).rgba;
	vec3 custom_col_r = texture(texture_palette, vec2(custom_data.r, 0.5)).rgb;
	vec3 custom_col_g = texture(texture_palette, vec2(custom_data.g, 0.5)).rgb;
	vec3 custom_col_b = texture(texture_palette, vec2(custom_data.b, 0.5)).rgb;
	
	vec3 tint_base = vec3(1.0, 1.0, 1.0);
	vec3 tint_red = mix(tint_base, custom_col_r, tint_mask.r);
	vec3 tint_green = mix(tint_base, custom_col_g, tint_mask.g);
	vec3 tint_blue = mix(tint_base, custom_col_b, tint_mask.b);
	vec3 tint_final = mix(tint_base, tint_red * tint_green * tint_blue, tint_mask.a);
	
	ALBEDO = albedo_col.rgb * tint_final;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"
metadata/_edit_res_path = "res://Clappers.tscn::Shader_dgrcn"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_314gj"]
load_path = "res://.godot/imported/albedo.png-c3af9d3fd09c62c6a78dc94fcc37b86c.s3tc.ctex"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_4iyjx"]
load_path = "res://.godot/imported/tintmask.png-82c5a6c8d02fa5707daf1057d471dedb.s3tc.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6jhk0"]
render_priority = 0
shader = SubResource("Shader_dgrcn")
shader_parameter/start_frame = 0.0
shader_parameter/end_frame = 6.0
shader_parameter/time_scale = 0.5
shader_parameter/specular = 0.2
shader_parameter/metallic = null
shader_parameter/roughness = 0.5
shader_parameter/offset_map = ExtResource("5_lu4mp")
shader_parameter/normal_map = ExtResource("4_o3j8l")
shader_parameter/texture_albedo = SubResource("CompressedTexture2D_314gj")
shader_parameter/texture_tintmask = SubResource("CompressedTexture2D_4iyjx")
shader_parameter/texture_palette = ExtResource("6_ybu68")

[sub_resource type="MultiMesh" id="3"]
transform_format = 1
instance_count = 1
mesh = ExtResource("7")
buffer = PackedFloat32Array(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0)

[node name="Clappers" type="Node3D"]
script = ExtResource("8")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("9")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="WorldEnvironment"]
transform = Transform3D(0.707107, -0.5, 0.5, 0, 0.707107, 0.707107, -0.707107, -0.5, 0.5, 0, 30, 30)
shadow_enabled = true

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.965926, 0.258819, 0, -0.258819, 0.965926, 0, 12, 15)
current = true

[node name="Rows" type="Node3D" parent="."]

[node name="Row1" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 0, 0)

[node name="Row2" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 2, -2.2)

[node name="Row3" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 4, -4.2)

[node name="Row4" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 6, -6.2)

[node name="Row5" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 8, -8.2)

[node name="Row6" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 10, -10.2)

[node name="Row7" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 12, -12.2)

[node name="Row8" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 14, -14.2)

[node name="Row9" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 16, -16.2)

[node name="Row10" type="Marker3D" parent="Rows"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 18, -18.2)

[node name="Stand" type="Node3D" parent="."]

[node name="seats" parent="Stand" instance=ExtResource("1")]
transform = Transform3D(20, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)

[node name="Left" type="MeshInstance3D" parent="Stand"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 20.5, 11, -9)
mesh = SubResource("1")

[node name="Right" type="MeshInstance3D" parent="Stand"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -20.5, 11, -9)
mesh = SubResource("1")

[node name="Back" type="MeshInstance3D" parent="Stand"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 11, -20.5)
mesh = SubResource("2")

[node name="MultiMeshInstance3D" type="MultiMeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_6jhk0")
multimesh = SubResource("3")
